{
  "name": "vSelect",
  "props": {
    "base": "",
    "variant": "",
    "modelValue": "Select v-model. If the items are objects model returns the `value` property (or an `array` of `values` if the select is in `multi-value` mode) instead of the whole object",
    "useLoader": "Enables the spinner in the input",
    "multiple": "Allows selecting multiple values",
    "maxMultiple": "Maximum number of rendered items for a `multiple` select. If there are more items, the `max-multiple` slot can be used to display additional information",
    "isLoading": "Use it whenever you are asynchronously updating `items`.",
    "inline": "Sets inputs display to `inline`",
    "icon": "",
    "clearable": "Adds an 'X' button that resets model to the default value",
    "state": "",
    "items": "Items to display can be an `array` of `strings`, `objects` or a mix of both. If using objects, they should have at least `text` and `value` properties. If the `objects` have additional properties, you can display them using the `item` slot",
    "autocomplete": "Enables filtering of items based on input's value. You can also use v-autocomplete which is a wrapper for v-select with this prop enabled by default",
    "itemText": "Sets the name of the property that holds the text of the item.",
    "itemValue": "Sets the name of the property that holds the value of the item.",
    "filterKeys": "By default text property is used to filter items. You can set different properties by adding them to this prop.",
    "noFilter": "Disables the internal filter in `autocomplete` mode. Provide filtered items by updating the `items` prop",
    "noPagination": "Disables the internal pagination. You can paginate items by updating the `items` prop",
    "emptyDataMessage": "Message to display in the menu when the `items` array is empty",
    "input": "Attributes of the v-input component",
    "card": "Attributes of the v-card component used as the menu container",
    "chevron": "Attributes of the v-chevron component",
    "itemsPerPage": "Number of items to display per page. Use `0` to display all items on a single page. This setting is ignored if `no-pagination` is enabled",
    "transition": "Sets an animation effect when showing or hiding autocomplete menu. Valid values are: 'fade' or `empty string` to disable animations. Animation speed can be set in the `--autocomplete-transition-duration` css variable.",
    "modItem": "Style of the menu item element",
    "placement": "",
    "offsetX": "",
    "offsetY": "",
    "noFlip": ""
  },
  "emits": {
    "update:modelValue": "",
    "update:page": "Fired when next page is displayed (scroll reach end of dropdown menu)",
    "input:value": "Fired when input value changes",
    "state:opened": "Dropdown menu opens",
    "state:closed": "Dropdown menu closes"
  },
  "slots": {
    "menu-item": "Slot for the menu item. Slot props: `text`, `value`, `item`, `inputValue`",
    "menu-append": "Slot for the additional content below menu items",
    "selected-item": "Slot for the custom selected items",
    "max-multiple": "Content of this slot is appended to the selected items if the `max-multiple` prop is enabled"
    
  },
  "functions": {},
  "components": {}
}
