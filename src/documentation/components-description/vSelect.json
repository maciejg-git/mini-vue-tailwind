{
  "name": "vSelect",
  "props": {
    "base": "",
    "variant": "",
    "modelValue": "Select v-model. If items are objects model returns `value` property (or `array` of `values` if select is `multi-value`) instead of whole object",
    "useLoader": "Enables spinner in the input",
    "multiple": "Allows selecting multiple values",
    "maxMultiple": "Maximum number of rendered items for `multiple` select. If there is more items `max-multiple` slot can be used to show additional information",
    "isLoading": "Use it whenever asynchronously updating items prop. Required.",
    "inline": "Sets inputs display to inline",
    "icon": "",
    "clearable": "Adds 'X' button that resets model to default value",
    "state": "",
    "items": "Items to display. Can be `array` of `strings` or `objects` or mixed. Objects should at least have `text` and `value` properties. If `objects` have additional properties you can display them using `item` slot",
    "autocomplete": "Allows filtering select items based on inputs value. You can also use v-autocomplete which is wrapper of v-select with this prop enabled by default",
    "itemText": "Set name of the property of items’s text value",
    "itemValue": "Set name of the property of items’s value",
    "filterKeys": "By default text property is used to filter items. You can set different properties by adding them to this prop.",
    "noFilter": "Do not use internal filter in `autocomplete` mode. You should provide filtered items by updating `items` prop",
    "noPagination": "Do no use internal pagination. You can paginate items by updating `items` prop",
    "emptyDataMessage": "Message to display inside menu when `items` array is empty",
    "input": "Attributes of v-input component",
    "card": "Attributes of v-card component used as container for select menu",
    "chevron": "Attributes of v-chevron component",
    "itemsPerPage": "Amounts of items to display per page, 0 = all items on single page. Ignored if `no-pagination` is used",
    "transition": "Sets animation effect when showing or hiding autocomplete menu. Valid values are: 'fade' or `empty string` to disable animations. Animation speed can be set in `--autocomplete-transition-duration` css variable.",
    "styleItem": "Menu item element",
    "placement": "",
    "offsetX": "",
    "offsetY": "",
    "noFlip": ""
  },
  "emits": {
    "update:modelValue": "",
    "update:page": "Fired when next page is displayed (scroll reach end of dropdown menu)",
    "input:value": "Fired when input value changes",
    "state:opened": "Dropdown menu opens",
    "state:closed": "Dropdown menu closes"
  },
  "slots": {
    "menu-item": "Slot for menu item. Slot props: `text`, `value`, `item`, `inputValue`",
    "menu-append": "Slot for additional content below menu items",
    "selected-item": "Slot for custom selected items",
    "max-multiple": "Content of this slot is appended to selected items if `max-multiple` prop is enabled"
    
  },
  "functions": {},
  "components": {}
}
