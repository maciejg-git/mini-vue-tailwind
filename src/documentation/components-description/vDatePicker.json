{
  "name": "vDatePicker",
  "props": {
    "base": "",
    "variant": "",
    "modelValue": "v-model is used to return date after selection. Date is in `YYYY-MM-DD` format",
    "locale": "This prop is only used to display names of months and weekdays and to format date emitted by input:formatted event. It does not modify format of v-model date which is always `YYYY-MM-DD`",
    "mondayFirstWeekday": "Week starts on Monday",
    "range": "Allows selection of date ranges. Changing this prop resets current selection",
    "format": "Format of date emmited by @input:formatted event. Read about how to use this object here (options paremeter)",
    "disabled": "",
    "width": "Component width",
    "adjacentMonths": "Display days from previous and next month. Those days are unselectable",
    "rangeHoverHighlight": "Enables highlighing days in range when hovering over days during selection",
    "buttons": "Adds 'accept' and 'cancel' buttons. If this prop is false then v-model is updated immedietely after clicking on the day. If it is true then v-model is updated after clicking 'accept' button",
    "secondaryButtonLabel": "Secondary (cancel) button label",
    "primaryButtonLabel": "Primary (accept) button label",
    "primaryButton": "Attributes of primary v-button",
    "secondaryButton": "Attributes of secondary v-button",
    "transition": "Transition when switching months or years. Valid values are 'fade', 'slide' or `empty string` for no transition",
    "styleDatepicker": "Main component wrapper",
    "styleWeekdayBar": "Weekday names bar",
    "styleWeekday": "Single weekday name",
    "styleButton": "Next and previous month/year buttons",
    "styleDay": "Single day",
    "styleAdjacentMonthDay": "Days from adjacent months",
    "styleFooter": "Footer with today date"
  },
  "emits": {
    "update:modelValue": "",
    "update:formatted": "Emmited after selecting date along with @update:modelValue. Date is formatted based on `locale` and `format` prop",
    "state:done": "Emmited after selecting date (and clicking primary button if `buttons` props is set to `true`)",
    "input:cancel": "Emmited after clicking secondary button"
  },
  "slots": {
    "day": "Emmited after clicking secondary button"
  },
  "functions": {},
  "components": {}
}
