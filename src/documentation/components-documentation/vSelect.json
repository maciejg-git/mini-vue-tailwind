{
  "name": "vSelect",
  "props": [
    {
      "type": [
        "String",
        "Object",
        "Boolean",
        "Number"
      ],
      "default": "undefined",
      "prop": "v-model",
      "description": "Select v-model. If items are objects model returns `value` property (or `array` of `values` if select is `multi-value`) instead of whole object"
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "autocomplete",
      "description": "Allows filtering select items based on inputs value. You can also use v-autocomplete which is wrapper of v-select with this prop enabled by default"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"select\"",
      "prop": "base",
      "description": "Base name of the component for styling"
    },
    {
      "type": [
        "Object"
      ],
      "default": {},
      "prop": "card",
      "description": ""
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "clearable",
      "description": ""
    },
    {
      "type": [
        "String"
      ],
      "default": "\"No data available\"",
      "prop": "empty-data-message",
      "description": "Message to display inside menu when `items` array is empty"
    },
    {
      "type": [
        "Array"
      ],
      "default": [],
      "prop": "filter-keys",
      "description": "By default text property is used to filter items. You can set different properties by adding them to this prop."
    },
    {
      "type": [
        "String",
        "Object"
      ],
      "default": "empty string",
      "prop": "icon",
      "description": ""
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "inline",
      "description": ""
    },
    {
      "type": [
        "Object"
      ],
      "default": {},
      "prop": "input",
      "description": ""
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "is-loading",
      "description": "Use it whenever asynchronously updating items prop. Required."
    },
    {
      "type": [
        "String"
      ],
      "default": "\"text\"",
      "prop": "item-text",
      "description": "Set name of the property of items’s text value"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"value\"",
      "prop": "item-value",
      "description": "Set name of the property of items’s value"
    },
    {
      "type": [
        "Array"
      ],
      "default": [],
      "prop": "items",
      "description": "Items to display. Can be `array` of `strings` or `objects` or mixed. Objects should at least have `text` and `value` properties. If `objects` have additional properties you can display them using `item` slot"
    },
    {
      "type": [
        "Number"
      ],
      "default": 10,
      "prop": "items-per-page",
      "description": "Amounts of items to display per page, 0 = all items on single page. Ignored if `no-pagination` is used"
    },
    {
      "type": [
        "Number"
      ],
      "default": 9999,
      "prop": "max-multi-value",
      "description": ""
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "multi-value",
      "description": "Allows selecting multiple values"
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "no-filter",
      "description": "Do not use internal filter in `autocomplete` mode. You should provide filtered items by updating `items` prop"
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "no-flip",
      "description": "Allows fliping dropdown to opposite placement if outside of current view"
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "no-pagination",
      "description": "Do no use internal pagination. You can paginate items by updating `items` prop"
    },
    {
      "type": [
        "Number"
      ],
      "default": 0,
      "prop": "offset-x",
      "description": "Offset of dropdown relative to reference element. See how to use this offset here"
    },
    {
      "type": [
        "Number"
      ],
      "default": 0,
      "prop": "offset-y",
      "description": "Offset of dropdown relative to reference element. See how to use this offset here"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"bottom-start\"",
      "prop": "placement",
      "description": "Initial placement of dropdown content. See valid values in Popperjs documentation"
    },
    {
      "type": [
        "String"
      ],
      "default": "null",
      "prop": "state",
      "description": "Overrides state of input validity. Supported values are 'valid', 'invalid', `empty string` for default state or `null` for component controlled state"
    },
    {
      "type": [
        "String"
      ],
      "default": "empty string",
      "prop": "style-item",
      "description": "Menu item element"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"fade\"",
      "prop": "transition",
      "description": "Sets animation effect when showing or hiding autocomplete menu. Valid values are: 'fade' or `empty string` to disable animations. Animation speed can be set in `--autocomplete-transition-duration` css variable."
    },
    {
      "type": [
        "Boolean"
      ],
      "default": true,
      "prop": "use-loader",
      "description": ""
    },
    {
      "type": [
        "String",
        "Boolean"
      ],
      "default": "empty string",
      "prop": "variant",
      "description": "Variant of the component styles"
    }
  ],
  "events": [
    {
      "event": "update:modelValue",
      "description": "Updates v-model of component"
    },
    {
      "event": "update:page",
      "description": "Fired when next page is displayed (scroll reach end of dropdown menu)"
    },
    {
      "event": "input:value",
      "description": "Fired when input value changes"
    },
    {
      "event": "state:opened",
      "description": "Dropdown menu opens"
    },
    {
      "event": "state:closed",
      "description": "Dropdown menu closes"
    }
  ],
  "slots": [
    {
      "slot": "multi-value-item",
      "description": ""
    },
    {
      "slot": "max-multi-value",
      "description": ""
    },
    {
      "slot": "menu-item",
      "description": "Slot for menu item. Slot props: `text`, `value`, `item`, `inputValue`"
    }
  ],
  "functions": [],
  "components": []
}