{
  "name": "vDropdown",
  "description": "",
  "props": [
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "v-model",
      "description": "Set it to `true`/`false` to programatically show or hide dropdown content. Model is optional"
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "auto-close-menu",
      "description": "If `true` clicking any dropdown menu item automatically closes dropdown"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"dropdown\"",
      "prop": "base",
      "description": "Base name of the component for styling"
    },
    {
      "type": [
        "String"
      ],
      "default": "empty string",
      "prop": "name",
      "description": "Name of the component"
    },
    {
      "type": [
        "Boolean"
      ],
      "default": false,
      "prop": "no-flip",
      "description": "Allows fliping dropdown to opposite placement if outside of current view"
    },
    {
      "type": [
        "Number"
      ],
      "default": 0,
      "prop": "offset-x",
      "description": "Offset of dropdown relative to reference element. See how to use this offset here"
    },
    {
      "type": [
        "Number"
      ],
      "default": 0,
      "prop": "offset-y",
      "description": "Offset of dropdown relative to reference element. See how to use this offset here"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"bottom-start\"",
      "prop": "placement",
      "description": "Initial placement of dropdown content. See valid values in Popperjs documentation"
    },
    {
      "type": [
        "String"
      ],
      "default": "empty string",
      "prop": "style-header",
      "description": "Style of menu header"
    },
    {
      "type": [
        "String"
      ],
      "default": "empty string",
      "prop": "style-item",
      "description": "Style of menu item"
    },
    {
      "type": [
        "String"
      ],
      "default": "\"fade\"",
      "prop": "transition",
      "description": "Sets animation effect when showing or hiding dropdown. Valid values are: 'fade' or `empty string` to disable animations. Animation speed can be set in `--dropdown-transition-duration` css variable."
    },
    {
      "type": [
        "String"
      ],
      "default": "\"click\"",
      "prop": "trigger",
      "description": "How to trigger dropdown. Valid triggers are 'click', 'focus' and 'hover'"
    },
    {
      "type": [
        "String",
        "Boolean"
      ],
      "default": "empty string",
      "prop": "variant",
      "description": "Variant of the component styles"
    }
  ],
  "events": [
    {
      "event": "state:opened",
      "description": "Emitted after dropdown is opened"
    },
    {
      "event": "state:closed",
      "description": "Emitted after dropdown is closed"
    },
    {
      "event": "update:modelValue",
      "description": "Emitted after model change"
    }
  ],
  "slots": [
    {
      "slot": "reference",
      "description": "Slot for element that activates dropdown. Dropdown is positioned relative to element that has `ref` set to `reference`. Slot props: `reference`, `onTrigger` and `isOpen`"
    },
    {
      "slot": "default",
      "description": "Slot for dropdown content. Slot props: `hide()`"
    }
  ],
  "functions": [
    {
      "function": "showContextDropdown($event, contextData: Object)",
      "description": "Shows context menu. Context data is available in slot props of `default` slot. Only available on v-dropdown-context"
    }
  ],
  "components": [
    {
      "component": "v-dropdown-menu-item",
      "description": ""
    },
    {
      "component": "v-dropdown-header",
      "description": ""
    },
    {
      "component": "v-button-chevron",
      "description": ""
    }
  ]
}